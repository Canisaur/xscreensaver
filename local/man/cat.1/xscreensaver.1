






























































                                                                1





XScreenSaver(1)                                   XScreenSaver(1)


NNAAMMEE
       xscreensaver  -  graphics hack and screen locker, launched
       when the user is idle

SSYYNNOOPPSSIISS
       xxssccrreeeennssaavveerr [-display _h_o_s_t_:_d_i_s_p_l_a_y_._s_c_r_e_e_n] [-timeout _i_n_t]
       [-cycle _i_n_t] [-nice _i_n_t] [-lock] [-no-lock] [-lock-timeout
       _i_n_t] [-demo]  [-visual  _v_i_s_u_a_l]  [-install]  [-no-install]
       [-verbose]  [-silent] [-xidle-extension] [-no-xidle-exten-
       sion]  [-sgi-extension]  [-no-sgi-extension]  [-mit-exten-
       sion] [-no-mit-extension] [-xrm _r_e_s_o_u_r_c_e_s]

DDEESSCCRRIIPPTTIIOONN
       The  _x_s_c_r_e_e_n_s_a_v_e_r  program  waits  until  the keyboard and
       mouse have been idle for a period, and then runs a  graph-
       ics  demo chosen at random.  It turns off as soon as there
       is any mouse or keyboard activity.

       This program can lock your terminal in  order  to  prevent
       others from using it, though its default mode of operation
       is merely to display pretty pictures on your  screen  when
       it is not in use.

       The  benefit that this program has over the combination of
       the xxlloocckk(1) and xxaauuttoolloocckk(1) programs is  the  ease  with
       which new graphics hacks can be installed.  You don't need
       to recompile (or even re-run) this program to  add  a  new
       display mode.

OOPPTTIIOONNSS
       _x_s_c_r_e_e_n_s_a_v_e_r accepts the following command line options:

       --ttiimmeeoouutt _m_i_n_u_t_e_s
               The  screensaver  will activate after the keyboard
               and mouse have been idle for  this  many  minutes.
               Default 10.

       --ccyyccllee _m_i_n_u_t_e_s
               After  the  screensaver  has been running for this
               many minutes, the currently running graphics  hack
               sub-process  will  be killed (with SSIIGGTTEERRMM), and a
               new one started.  If this is 0, then the  graphics
               hack  will  not be changed: only one demo will run
               until  the  screensaver  is  deactivated  by  user
               activity.  Default 10.

       --nniiccee _i_n_t_e_g_e_r
               The  sub-processes created by _x_s_c_r_e_e_n_s_a_v_e_r will be
               ``niced'' to this level, so that  they  are  given
               lower priority than other processes on the system,
               and don't increase the  load  unnecessarily.   The
               default is 20.

               (Higher  numbers  mean lower priority; see nniiccee(1)



X Version 11                31-May-97                           1





XScreenSaver(1)                                   XScreenSaver(1)


               for details.)

       --lloocckk   Enable locking: before the screensaver  will  turn
               off,  it  requires you to type the password of the
               person who launched the screensaver, or  the  root
               password.  (Note: this doesn't work if the screen-
               saver is launched by xxddmm(1) because it can't  know
               the user-id of the logged-in user.)

       --nnoo--lloocckk
               Disable locking.  This is the default.

       --lloocckk--ttiimmeeoouutt _m_i_n_u_t_e_s
               This  is  how long after the screensaver activates
               that locking is enabled.  For example, if this  is
               5,  and _-_t_i_m_e_o_u_t is 10, then after 10 minutes, the
               screen would blank.  If there was user activity at
               12  minutes,  no password would be required.  But,
               if there was user activity at 15 minutes or  later
               (_-_l_o_c_k_-_t_i_m_e_o_u_t  minutes  after  activation) then a
               password would be required.   The  default  is  0,
               meaning  that  if locking is enabled, then a pass-
               word will be required as soon as  the  screensaver
               activates.

       --ddeemmoo   Enter  the interactive demo mode immediately after
               startup.  Normally demo mode is  invoked  via  the
               xxssccrreeeennssaavveerr--ccoommmmaanndd(1)  program,  but  this  is a
               shortcut for new users.  See below for a  descrip-
               tion of how demo-mode works.

       --vviissuuaall _v_i_s_u_a_l
               Specify  which  X visual to use by default.  Legal
               values are:

               ddeeffaauulltt Use  the  screen's  default  visual   (the
                       visual  of  the root window.)  This is the
                       default.

               bbeesstt    Use the visual  which  supports  the  most
                       colors.   Note,  however,  that the visual
                       with the most colors might be a  TrueColor
                       visual,  which  does  not support colormap
                       animation.

               mmoonnoo    Use a monochrome visual, if there is  one.

               ggrraayy    Use  a  grayscale or staticgray visual, if
                       there is one and  it  has  more  than  one
                       plane (that is, it's not monochrome.)

               ccoolloorr   Use  the  best  of  the  color visuals, if
                       there are any.




X Version 11                31-May-97                           2





XScreenSaver(1)                                   XScreenSaver(1)


               _c_l_a_s_s   where _c_l_a_s_s is one

                       of  SSttaattiiccGGrraayy,  SSttaattiiccCCoolloorr,   TTrruueeCCoolloorr,
                       GGrraayySSccaallee,  PPsseeuuddooCCoolloorr,  or  DDiirreeccttCCoolloorr.
                       Selects the deepest visual  of  the  given
                       class.

               _n_u_m_b_e_r  where  _n_u_m_b_e_r  (decimal  or hex) is inter-
                       preted as a visual id number, as  reported
                       by  the  xxddppyyiinnffoo(1)  program; in this way
                       you can have finer  control  over  exactly
                       which  visual  gets  used, for example, to
                       select a shallower one than  would  other-
                       wise have been chosen.

               Note  that  this option specifies only the _d_e_f_a_u_l_t
               visual that will be used: the visual used  may  be
               overridden on a program-by-program basis.  See the
               description of the pprrooggrraammss resource, below.

       --iinnssttaallll
               When using a non-default visual, install a private
               colormap  while the screensaver is active, so that
               the graphics hacks can get as many colors as  pos-
               sible.    This is the default.  (This only applies
               when the screen's default visual  is  being  used,
               since  non-default visuals get their own colormaps
               automatically.)

       --nnoo--iinnssttaallll
               Use the default colormap.

       --vveerrbboossee
               Print diagnostics.

       --ssiilleenntt

       --xxiiddllee--eexxtteennssiioonn
               Use the XXIIDDLLEE server extension to  decide  whether
               the user is idle.  This is the default if _x_s_c_r_e_e_n_-
               _s_a_v_e_r has been  compiled  with  support  for  this
               extension.   On  X11R4 or X11R5 systems, the XIdle
               method is faster and more reliable than what  will
               be done otherwise, so use it if you can.

       --nnoo--xxiiddllee--eexxtteennssiioonn
               Don't use the XXIIDDLLEE server extension.

       --ssggii--eexxtteennssiioonn
               Use  the  SGI  SSCCRREEEENN__SSAAVVEERR  server  extension  to
               decide whether the user  is  idle.   This  is  the
               default  if  _x_s_c_r_e_e_n_s_a_v_e_r  has  been compiled with
               support for this extension (which is  the  default
               on   SGI  systems.).   If  it  is  available,  the



X Version 11                31-May-97                           3





XScreenSaver(1)                                   XScreenSaver(1)


               SSCCRREEEENN__SSAAVVEERR method is faster  and  more  reliable
               than what will be done otherwise, so use it if you
               can.

       --nnoo--ssggii--eexxtteennssiioonn
               Don't use the SGI SSCCRREEEENN__SSAAVVEERR server extension.

       --mmiitt--eexxtteennssiioonn
               Use  the  MMIITT--SSCCRREEEENN--SSAAVVEERR  server  extension   to
               decide  whether  the  user  is  idle.  This is the
               default if _x_s_c_r_e_e_n_s_a_v_e_r  has  been  compiled  with
               support  for this extension.  However, this exten-
               sion is flaky, so it's use is  not  really  recom-
               mended.   (It  also makes the _f_a_d_e option not work
               properly.)

       --nnoo--mmiitt--eexxtteennssiioonn
               Don't use the MMIITT--SSCCRREEEENN--SSAAVVEERR server extension.

XX RREESSOOUURRCCEESS
       _x_s_c_r_e_e_n_s_a_v_e_r understands the following resources:


       ttiimmeeoouutt (class TTiimmee)
               Same as the _-_t_i_m_e_o_u_t command-line option.  Default
               10 minutes.

       ccyyccllee (class TTiimmee)
               Same  as  the _-_c_y_c_l_e command-line option.  Default
               10 minutes.

       nniiccee (class NNiiccee)
               Same as the _-_n_i_c_e  command-line  option.   Default
               10.

       lloocckk (class BBoooolleeaann)
               Same as the _-_l_o_c_k command-line option.

       lloocckkTTiimmeeoouutt (class TTiimmee)
               Same as the _-_l_o_c_k_-_t_i_m_e_o_u_t command-line option.

       ppaasssswwddTTiimmeeoouutt (class TTiimmee)
               If  the  screen  is  locked, then this is how many
               seconds the password dialog box should be left  on
               the  screen  before  giving up (default 30.)  This
               should not be too large: the X server  is  grabbed
               for  the  duration that the password dialog box is
               up (for security purposes) and leaving the  server
               grabbed for too long can cause problems.

       vveerrbboossee (class BBoooolleeaann)
               Same as the _-_v_e_r_b_o_s_e command-line option.





X Version 11                31-May-97                           4





XScreenSaver(1)                                   XScreenSaver(1)


       xxiiddllee (class BBoooolleeaann)
               Same as the _-_x_i_d_l_e command-line option.

       ffaaddee (class BBoooolleeaann)
               If  this  is true, then when the screensaver acti-
               vates, the current contents  of  the  screen  will
               fade to black instead of simply winking out.  This
               only works on displays  with  writable  colormaps,
               that is, if the screen's default visual is a Pseu-
               doColor visual.  Default true.  A fade  will  also
               be  done  when  switching graphics hacks (when the
               _c_y_c_l_e timer expires.)

       uunnffaaddee (class BBoooolleeaann)
               If this is true, then when the screensaver deacti-
               vates,  the  original  contents of the screen will
               fade in from black instead  of  appearing  immedi-
               ately.   This only works on displays with writable
               colormaps, and if _f_a_d_e is true as  well.   Default
               false.

       ffaaddeeSSeeccoonnddss (class TTiimmee)
               If _f_a_d_e is true, this is how long the fade will be
               in seconds (default 3.)

       ffaaddeeTTiicckkss (class IInntteeggeerr)
               If _f_a_d_e is true, this is how many times  a  second
               the  colormap  will  be  changed to effect a fade.
               Higher numbers yield smoother fades, but may  make
               the  fades take longer than the specified _f_a_d_e_S_e_c_-
               _o_n_d_s if your server isn't fast enough to keep  up.
               Default 20.

       vviissuuaallIIDD (class VViissuuaallIIDD)
               Same  as the _-_v_i_s_u_a_l command-line option.  Default
               ddeeffaauulltt.

       iinnssttaallllCCoolloorrmmaapp (class BBoooolleeaann)
               Same as the _-_i_n_s_t_a_l_l command-line option.  Default
               true.

       ccaappttuurreeSSttddeerrrr (class BBoooolleeaann)
               Whether _x_s_c_r_e_e_n_s_a_v_e_r should redirect its standard-
               error stream to  the  window  itself.   Since  its
               nature  is  to take over the screen, you would not
               normally  see  error  messages  generated  by  the
               screensaver or the programs it runs; this resource
               will cause the output of all relevant programs  to
               be  drawn on the screensaver window itself instead
               of written to  the  controlling  terminal  of  the
               screensaver driver process.  Default true.

       ccaappttuurreeSSttddoouutt (class BBoooolleeaann)
               Like  ccaappttuurreeSSttddeerrrr  but  for  the standard-output



X Version 11                31-May-97                           5





XScreenSaver(1)                                   XScreenSaver(1)


               stream.  Default true.

       ffoonntt (class FFoonntt)
               The font used for the stdout/stderr text, if  ccaapp--
               ttuurreeSSttddoouutt  or  ccaappttuurreeSSttddeerrrr  are  true.  Default
               **--mmeeddiiuumm--rr--**--114400--**--mm--**  (a  14  point  fixed-width
               font.)

       tteexxttFFoorreeggrroouunndd (class FFoorreeggrroouunndd)
               The  foreground  color  used for the stdout/stderr
               text, if ccaappttuurreeSSttddoouutt or ccaappttuurreeSSttddeerrrr are  true.
               Default: Yellow.

       tteexxttBBaacckkggrroouunndd (class BBaacckkggrroouunndd)
               The  background  color  used for the stdout/stderr
               text, if ccaappttuurreeSSttddoouutt or ccaappttuurreeSSttddeerrrr are  true.
               Default: Black.

       pprrooggrraammss (class PPrrooggrraammss)
               The  graphics  hacks  which _x_s_c_r_e_e_n_s_a_v_e_r runs when
               the user is idle.  The value of this resource is a
               string, one _s_h-syntax command per line.  Each line
               must contain exactly one command -- no semicolons,
               no ampersands.

               When  the  screensaver  starts up, one of these is
               selected at random,  and  run.   After  the  _c_y_c_l_e
               period  expires,  it  is  killed,  and  another is
               selected and run.

               If the value of this resource is  empty,  then  no
               programs  will  be  run; the screen will simply be
               made black.

               If the display has multiple screens, then  a  dif-
               ferent program will be run for each screen.

               Note that you must escape the newlines; here is an
               example of how you might set this  in  your  _._X_d_e_-
               _f_a_u_l_t_s file:

               xscreensaver.programs:  \
                       qix -root                          \n\
                       ico -r -faces -sleep 1 -obj ico    \n\
                       xdaliclock -builtin2 -root         \n\
                       xv -root -rmode 5 image.gif -quit  \n

               To  use a program as a screensaver, two things are
               required: that that program draw on the root  win-
               dow  (or  be  able to be configured to draw on the
               root window); and  that  that  program  understand
               ``virtual  root'' windows, as used by virtual win-
               dow managers such as _t_v_t_w_m.  (Generally,  this  is
               accomplished   by  just  including  the  _"_v_r_o_o_t_._h_"



X Version 11                31-May-97                           6





XScreenSaver(1)                                   XScreenSaver(1)


               header file in the program's source.)

               If there are some programs that you  want  to  run
               only  when  using a color display, and others that
               you want to run only when using a monochrome  dis-
               play, you can specify that like this:

                       mono:   mono-program  -root        \n\
                       color:  color-program -root        \n\

               More generally, you can specify the kind of visual
               that should be used for the window  on  which  the
               program will be drawing.  For example, if one pro-
               gram works best if it has a colormap, but  another
               works  best if it has a 24-bit visual, both can be
               accomidated:

                       PseudoColor: cmap-program  -root   \n\
                       TrueColor:   24bit-program -root   \n\

               (This sort of thing used to be  accomplished  with
               the  _c_o_l_o_r_P_r_o_g_r_a_m_s and _m_o_n_o_P_r_o_g_r_a_m_s resources, but
               those resources have now been removed;  a  warning
               will be issued if they are used.)

               If  you specify a particular visual for a program,
               and that visual does not exist on the screen, then
               that  program  will  not  be  chosen to run.  This
               means that on displays with  multiple  screens  of
               different  depths, you can arrange for appropriate
               hacks to be run on  each.   For  example,  if  one
               screen is color and the other is monochrome, hacks
               that look good in mono can  be  run  on  one,  and
               hacks that only look good in color will show up on
               the other.


       Normally you won't need to change the following resources:

       bboouurrnneeSShheellll (class BBoouurrnneeSShheellll)
               The  pathname  of the shell that _x_s_c_r_e_e_n_s_a_v_e_r uses
               to start subprocesses.  This must be whatever your
               local  variant  of //bbiinn//sshh is -- in particular, it
               must not be ccsshh.

       wwiinnddoowwCCrreeaattiioonnTTiimmeeoouutt (class TTiimmee)
               When server extensions are not in use,  this  con-
               trols  the  delay between when windows are created
               and when  _x_s_c_r_e_e_n_s_a_v_e_r  selects  events  on  them.
               Default 30 seconds.

       ppooiinntteerrPPoollllTTiimmee (class TTiimmee)
               When  server  extensions are not in use, this con-
               trols how frequently _x_s_c_r_e_e_n_s_a_v_e_r checks to see if



X Version 11                31-May-97                           7





XScreenSaver(1)                                   XScreenSaver(1)


               the   mouse  position  or  buttons  have  changed.
               Default 5 seconds.

       iinniittiiaallDDeellaayy (class TTiimmee)
               When server extensions are not  in  use,  _x_s_c_r_e_e_n_-
               _s_a_v_e_r will wait this many seconds before selecting
               events on existing windows, under  the  assumption
               that  _x_s_c_r_e_e_n_s_a_v_e_r  is  started  during your login
               procedure, and the window state may  be  in  flux.
               Default 30 seconds.

       oovveerrllaayySSttddeerrrr (class BBoooolleeaann)
               If  ccaappttuurreeSSttddeerrrr  or  ccaappttuurreeSSttddoouutt are True, and
               your server supports ``overlay'' visuals, then the
               text will be written into one of the higher layers
               instead of into the  same  layer  as  the  running
               screenhack.   Set  this  to  False to disable that
               (though you shouldn't need to.)

HHOOWW IITT WWOORRKKSS
       When it is time to activate the screensaver, a full-screen
       black  window  is  created  on each screen of the display.
       The window or windows is given the appropriate  properties
       so  that,  to  any  subsequently-created programs, it will
       appear to be a ``virtual root'' window.  Because of  this,
       any  program  which  draws  on  the root window (and which
       understands virtual roots) can be used as a screensaver.

       When the user becomes active again, the  screensaver  win-
       dows  are unmapped and the running subprocesses are killed
       by sending them SSIIGGTTEERRMM.  This is  also  how  the  subpro-
       cesses  are  killed when the screensaver decides that it's
       time to run a different demo: the old one is killed and  a
       new one is launched.

       Before  launching  a  subprocess,  _x_s_c_r_e_e_n_s_a_v_e_r  stores an
       appropriate value for $$DDIISSPPLLAAYY in the environment that the
       child  will  recieve.   (This  is  so  that  if  you start
       _x_s_c_r_e_e_n_s_a_v_e_r with a _-_d_i_s_p_l_a_y argument, the programs  which
       _x_s_c_r_e_e_n_s_a_v_e_r  launches  will draw on the same display; and
       so that the child will end up drawing on  the  appropriate
       screen of a multi-headed display.)

       When  the  screensaver  turns  off,  or is killed, care is
       taken to restore the ``real'' virtual root window if there
       is  one.   Because  of  this, it is important that you not
       kill the screensaver process with _k_i_l_l _-_9 if you are  run-
       ning  a  virtual-root window manager.  If you kill it with
       -9, you may need to restart your window manager to  repair
       the  damage.   This isn't an issue if you aren't running a
       virtual-root window manager.

       For all the gory details, see the commentary at the top of
       xscreensaver.c.



X Version 11                31-May-97                           8





XScreenSaver(1)                                   XScreenSaver(1)


       You can control a running screensaver process by using the
       xxssccrreeeennssaavveerr--ccoommmmaanndd(1) program (which see.)

UUSSIINNGG XXDDMM((11))
       You can run _x_s_c_r_e_e_n_s_a_v_e_r from your xdm  session,  so  that
       the  screensaver will run even when nobody is logged in on
       the  console.   Simply  add  ""xxssccrreeeennssaavveerr  &&""   to   your
       _/_u_s_r_/_l_i_b_/_X_1_1_/_x_d_m_/_X_s_e_t_u_p  file.  Because _x_d_m grabs the key-
       board, keypresses will not make  the  screensaver  deacti-
       vate, but any mouse activity will.

       (If  your  system does not seem to be executing the _X_s_e_t_u_p
       file, you may need to configure it to do so -- the  tradi-
       tional  way  to  do this is to make that file the value of
       the _D_i_s_p_l_a_y_M_a_n_a_g_e_r_*_s_e_t_u_p resource in the _x_d_m_-_c_o_n_f_i_g  file.
       See the man page for xxddmm(1) for more details.)

       Users  may  want to add ""xxssccrreeeennssaavveerr--ccoommmmaanndd --rreessttaarrtt"" to
       their startup scripts, so that  the  screensaver  will  be
       reinitialized  with  their  private resource settings when
       they log in.

       It is safe to run this program as root (as _x_d_m  is  likely
       to  do.)   If run as root, _x_s_c_r_e_e_n_s_a_v_e_r changes its effec-
       tive user and group ids to something safe (like  _"_n_o_b_o_d_y_")
       before connecting to the X server or launching user-speci-
       fied programs.

       Locking doesn't work if the  screensaver  is  launched  by
       _x_d_m.  To get around this, you can run the screensaver from
       _x_d_m without locking, and kill and  restart  it  from  your
       personal X startup script to enable locking; for example:

               xscreensaver-command -exit ; xscreensaver


DDEEMMOO MMOODDEE
       If  _x_s_c_r_e_e_n_s_a_v_e_r receives the DDEEMMOO ClientMessage, which is
       done by running the xxssccrreeeennssaavveerr--ccoommmmaanndd program with  the
       --ddeemmoo  option,  the  screensaver will black the screen and
       pop up a dialog box from which you can examine and experi-
       ment with the client programs.

       The  dialog  box  contains a scrolling list, a text field,
       and a number of buttons.

       Double-clicking on one of the programs in  the  list  will
       run  it.   Clicking  the mouse again will bring the dialog
       box back.

       Single-clicking in the list will place the indicated  pro-
       gram  and  its  args in the text field to be edited.  Edit
       the arguments and hit return to run the program  with  the
       parameters  you have specified.  (Note that these are one-



X Version 11                31-May-97                           9





XScreenSaver(1)                                   XScreenSaver(1)


       time changes and won't be remembered; to make the  changes
       permanent, you need to edit your X resource file.)

       The buttons are:

       RRuunn NNeexxtt
               Clicking  this button will run the next program in
               the list after  the  currently-selected  one,  and
               will  scroll around to the top when it reaches the
               bottom.

       RRuunn PPrreevviioouuss
               Opposite of Run  Next;  at  the  top,  it  scrolls
               around to the bottom.

       EEddiitt PPaarraammeetteerrss
               This  pops  up  a  second dialog box, in which you
               have the option to interactively  change  most  of
               the  screensaver's operational parameters, such as
               its timeouts,  and  whether  it  should  lock  the
               screen.    Changing  these  parameters  here  will
               affect only the running _x_s_c_r_e_e_n_s_a_v_e_r  process;  to
               make  the changes permanent, you need to edit your
               X resource file.

       EExxiitt DDeemmoo MMooddee
               Returns to normal screensaver operation.

       RReeiinniittiiaalliizzee
               This causes the X resource database to be re-read,
               to  pick up any changes you might have made.  This
               works by causing the screensaver process  to  exit
               and then restart itself with the same command-line
               arguments.  This is just like the  _-_r_e_s_t_a_r_t  argu-
               ment  to  xxssccrreeeennssaavveerr--ccoommmmaanndd(1) except that when
               executed from this button,  the  screensaver  will
               automatically  return  to demo mode after restart-
               ing.

BBUUGGSS
       (This is not a bug, but) note that as of release 1.32, the
       ccoolloorrPPrrooggrraammss  and  mmoonnooPPrrooggrraammss  resources  are no longer
       used: they have been supplanted by the extended syntax  of
       the pprrooggrraammss resource (see above.)

       Extensions
               If  you  are  not  making use of one of the server
               extensions (XXIIDDLLEE,  SSCCRREEEENN__SSAAVVEERR,  or  MMIITT--SSCCRREEEENN--
               SSAAVVEERR),  then  it is possible, in rare situations,
               for _x_s_c_r_e_e_n_s_a_v_e_r to interfere with event  propaga-
               tion  and make another X program malfunction.  For
               this to occur, that other application  would  need
               to _n_o_t select KKeeyyPPrreessss events on its non-leaf win-
               dows  within  the  first  30  seconds   of   their



X Version 11                31-May-97                          10





XScreenSaver(1)                                   XScreenSaver(1)


               existence,  but  then  select  for them later.  In
               this case, that client _m_i_g_h_t fail to receive those
               events.   This  isn't  very likely, since programs
               generally select a constant set of events  immedi-
               ately  after creating their windows and then don't
               change them, but this is the reason  that  it's  a
               good  idea  to  install  and use one of the server
               extensions instead, to work around this  shortcom-
               ing in the X protocol.

       Machine Load
               Although  this  program ``nices'' the subprocesses
               that it starts, graphics-intensive subprograms can
               still overload the machine by causing the X server
               process itself (which is not ``niced'') to suck  a
               lot  of cycles.  Care should be taken to slow down
               programs  intended  for  use  as  screensavers  by
               inserting strategic calls to sslleeeepp(3) or uusslleeeepp(3)
               (or making liberal use of any _-_d_e_l_a_y options which
               the programs may provide.)

               Also,  an  active  screensaver  will  cause your X
               server to be pretty much permanently  swapped  in;
               but  the  same  is  true of any program that draws
               periodically, like xxcclloocckk(1) or xxllooaadd(1).

       Latency and Responsiveness
               If the subprocess is drawing too quickly  and  the
               connection  to the X server is a slow one (such as
               an X terminal running over a phone line) then  the
               screensaver might not turn off right away when the
               user becomes active again  (the  iiccoo(1)  demo  has
               this  problem  if  being  run in full-speed mode).
               This can  be  alleviated  by  inserting  strategic
               calls  to  XXSSyynncc(3)  in code intended for use as a
               screensaver.   This  prevents  too  much  graphics
               activity from being buffered up.

       Locking and XDM
               Locking   doesn't   work  if  the  screensaver  is
               launched by _x_d_m.  The reason for this is that when
               it  is launched by _x_d_m, the screensaver process is
               owned by some standard user id (such  as  _r_o_o_t  or
               _d_a_e_m_o_n)  instead  of  the user who is logged in on
               the console: because the screensaver  was  started
               _b_e_f_o_r_e  anyone  was  logged  in.  In order for the
               screensaver to prompt for the password of the per-
               son  who  had logged in from _x_d_m, it would need to
               know who that user was, and there is  no  reliable
               and  safe  way  to  figure that out.  (And even if
               there was, there  would  be  some  other  security
               issues here as well.)

               So  if  you  want  to use it as a locker, you must



X Version 11                31-May-97                          11





XScreenSaver(1)                                   XScreenSaver(1)


               start it with your user id.   If  it  has  already
               been started by _x_d_m, you can kill it with xxssccrreeeenn--
               ssaavveerr--ccoommmmaanndd --eexxiitt, and then start  it  again  as
               you.

       Passwords
               If  you  get  an error message like ``couldn't get
               password of _u_s_e_r'' then this probably  means  that
               you're  on  a  system  in  which  the  ggeettppwweenntt(3)
               library routine can only be  effectively  used  by
               root.  If this is the case, then _x_s_c_r_e_e_n_s_a_v_e_r must
               be installed as setuid to  root.   Care  has  been
               taken to make this a safe thing to do.

               It  also  may  mean  that  your system uses shadow
               passwords instead of the standard _g_e_t_p_w_e_n_t  inter-
               face;  in  that  case, you may need to change some
               options in _c_o_n_f_i_g_._h and recompile.

       TWM and Colormaps
               The iinnssttaallllCCoolloorrmmaapp option doesn't work very  well
               with  the  ttwwmm(1)  window  manager and its descen-
               dants.

               There is a race condition between the  screensaver
               and  this  window manager, which can result in the
               screensaver's colormap not getting installed prop-
               erly,  meaning  the  graphics hacks will appear in
               essentially random colors.  (If  the  screen  goes
               white instead of black, this is probably why.)

               The  mmwwmm(1) and oollwwmm(1) window managers don't seem
               to have this problem.  The race  condition  exists
               because X apparently does not provide a way for an
               OverrideRedirect window to have its own  colormap,
               short  of  grabbing the server (which is neither a
               good idea, nor really possible  with  the  current
               design.)   What  happens  is  that, as soon as the
               screensaver installs its colormap, ttwwmm responds to
               the  CCoolloorrmmaappNNoottiiffyy event that is generated by re-
               instaling the default colormap.   Apparently,  ttwwmm
               doesn't  _a_l_w_a_y_s  do  this; it seems to do it regu-
               larly if the screensaver is activated from a  menu
               item,  but  seems  to not do it if the screensaver
               comes on of its own volition, or is activated from
               another console.  Any thoughts on this problem are
               welcome...

       XView Clients
               Apparently there are some problems with XView pro-
               grams  getting  confused  and  thinking  that  the
               screensaver window is the real  root  window  even
               when the screensaver is not active: ClientMessages
               intended for the window manager are  sent  to  the



X Version 11                31-May-97                          12





XScreenSaver(1)                                   XScreenSaver(1)


               screensaver  window instead.  This could be solved
               by making xscreensaver  forward  all  unrecognised
               ClientMessages  to the real root window, but there
               may be other problems as well.  If anyone has  any
               insight  on  the cause of this problem, please let
               me know.

       MIT Extension and Fading
               When using the MMIITT--SSCCRREEEENN--SSAAVVEERR extension in  con-
               junction  with  the ffaaddee option, you may notice an
               unattractive flicker just before the fade  begins.
               This  is  because  the  server maps a black window
               just before it tells the _x_s_c_r_e_e_n_s_a_v_e_r  process  to
               activate.   The  _x_s_c_r_e_e_n_s_a_v_e_r  process immediately
               unmaps that window, but this results in a flicker.
               I  haven't  figured  a way  to get around this; it
               seems to be a fundamental property of  the  (mis-)
               design of this server extension.

       LessTif (Motif Clone)
               Rumor  has  it that demo mode is buggy if XScreen-
               Saver was compiled with the GNU  LessTif  reimple-
               mentation  of Motif.  Since it works fine with OSF
               Motif on a variety  of  systems,  I  assume  these
               problems  are  due to bugs in LessTif.  Again, any
               insight would be appreciated.

       Red Hot Lava
               There need to be a lot more  graphics  hacks.   In
               particular,  there  should  be  a  simulation of a
               Lavalite (tm).

EENNVVIIRROONNMMEENNTT
       DDIISSPPLLAAYY to get the default host and display number, and to
               inform  the sub-programs of the screen on which to
               draw.

       XXEENNVVIIRROONNMMEENNTT
               to get the name of a resource file that  overrides
               the  global  resources stored in the RESOURCE_MAN-
               AGER property.

UUPPGGRRAADDEESS
       The latest version can  always  be  found  at  http://peo-
       ple.netscape.com/jwz/xscreensaver/

SSEEEE AALLSSOO
       XX(1),  xxssccrreeeennssaavveerr--ccoommmmaanndd(1),  xxlloocckk(1), xxnnlloocckk(1), xxaauu--
       ttoolloocckk(1), xxddmm(1), aattttrraaccttiioonn(1), ggrreeyynneettiicc(1),  hheelliixx(1),
       hhooppaalloonngg(1),   nnoosseegguuyy(1),   ppyyrroo(1),  xxrrooggeerr(1),  qqiixx(1),
       rroocckkss(1),    rroorrsscchhaacchh(1),     bblliittssppiinn(1),     iimmssmmaapp(1),
       sslliiddeessccrreeeenn(1),   ddeeccaayyssccrreeeenn(1),  mmaazzee(1),  hhyyppeerrccuubbee(1),
       hhaalloo(1), ffllaammee(1), ppeeddaall(1), llmmoorrpphh(1), ddeeccoo(1), mmooiirree(1),
       kkaalleeiiddeessccooppee(1),   bbuubbbblleess(1),  lliigghhttnniinngg(1),  ssttrraannggee(1),



X Version 11                31-May-97                          13





XScreenSaver(1)                                   XScreenSaver(1)


       ffrraacctt(1), ssppiirraall(1), llaasseerr(1), ggrraavv(1), ddrriifftt(1),  iiffss(1),
       jjuulliiaa(1),    ppeennrroossee(1),    ssiieerrppiinnsskkii(1),    hhooppaalloonngg(1),
       bbrraaiidd(1),  bboouubboouullee(1),  ggaallaaxxyy(1),  ffllaagg(1),   ffoorreesstt(1),
       sspphheerree(1), lliissaa(1), xxddaalliicclloocckk(1), xxbboouunncceebbiittss(1), iiccoo(1),
       xxsswwaarrmm(1), xxwwaavvee(1),  xxvv(1),  xxttaaccyy(1),  bboonnggoo(1),  xxffiisshh--
       ttaannkk(1)

CCOOPPYYRRIIGGHHTT
       Copyright  (C) 1991, 1992, 1993, 1994, 1995, 1996, 1997 by
       Jamie Zawinski.  Permission to  use,  copy,  modify,  dis-
       tribute,  and sell this software and its documentation for
       any purpose is hereby granted without fee,  provided  that
       the  above  copyright notice appear in all copies and that
       both that copyright  notice  and  this  permission  notice
       appear  in  supporting  documentation.  No representations
       are made about the suitability of this  software  for  any
       purpose.   It  is  provided  "as  is"  without  express or
       implied warranty.

AAUUTTHHOORR
       Jamie Zawinski <jwz@netscape.com>.  Written in late  1991;
       first posted to comp.sources.x on 13-Aug-1992.

       Please  let  me  know  if  you  find  any bugs or make any
       improvements.

       Thanks to David Wojtowicz for implementing _l_o_c_k_T_i_m_e_o_u_t.

       Thanks to Martin Kraemer for  adding  support  for  shadow
       passwords and locking-disabled diagnostics.

       Thanks  to  the  many people who have contributed graphics
       demos to the package.

       Thanks to Patrick Moreau for the VMS port.

       And huge thanks to Jon A. Christopher for implementing the
       Athena  dialog support, so that locking and demo-mode work
       even if you don't have Motif.


















X Version 11                31-May-97                          14


