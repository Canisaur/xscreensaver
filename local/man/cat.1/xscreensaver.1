


XScreenSaver(1)                                   XScreenSaver(1)


NNAAMMEE
       xscreensaver  -  graphics hack and screen locker, launched
       when the user is idle

SSYYNNOOPPSSIISS
       xxssccrreeeennssaavveerr [-display _h_o_s_t_:_d_i_s_p_l_a_y_._s_c_r_e_e_n] [-timeout _i_n_t]
       [-cycle  _i_n_t]  [-lock-mode] [-no-lock-mode] [-lock-timeout
       _i_n_t] [-visual _v_i_s_u_a_l] [-install] [-no-install]  [-verbose]
       [-silent]    [-timestamp]    [-capture-stderr]   [-no-cap-
       ture-stderr]   [-splash]    [-no-splash]    [-nice    _i_n_t]
       [-mit-extension]    [-no-mit-extension]   [-sgi-extension]
       [-no-sgi-extension]  [-xidle-extension]  [-no-xidle-exten-
       sion]   [-proc-interrupts]   [-no-proc-interrupts]   [-xrm
       _r_e_s_o_u_r_c_e_s]

DDEESSCCRRIIPPTTIIOONN
       The _x_s_c_r_e_e_n_s_a_v_e_r program  waits  until  the  keyboard  and
       mouse  have been idle for a period, and then runs a graph-
       ics demo chosen at random.  It turns off as soon as  there
       is any mouse or keyboard activity.

       This  program  can  lock your terminal in order to prevent
       others from using it, though its default mode of operation
       is  merely  to display pretty pictures on your screen when
       it is not in use.

       The benefit that this program has over the combination  of
       the  xxlloocckk(1)  and  xxaauuttoolloocckk(1) programs is the ease with
       which new graphics hacks can be installed.  You don't need
       to  recompile  (or  even re-run) this program to add a new
       display mode.

GGEETTTTIINNGG SSTTAARRTTEEDD
       For the impatient, try this:

            xscreensaver &
            xscreensaver-demo

       The xxssccrreeeennssaavveerr--ddeemmoo(1) program should pop  up  a  dialog
       box  that  lets  you experiment with the xscreensaver set-
       tings and graphics modes.

       NNoottee:: unlike xxlloocckk(1), xscreensaver  has  a  client-server
       model:  the  _x_s_c_r_e_e_n_s_a_v_e_r program is a daemon that runs in
       the  background;  it  is  controlled  by  the   foreground
       xxssccrreeeennssaavveerr--ddeemmoo(1) and xxssccrreeeennssaavveerr--ccoommmmaanndd(1) programs.

CCOONNFFIIGGUURRAATTIIOONN
       Options to  _x_s_c_r_e_e_n_s_a_v_e_r  are  specified  in  one  of  two
       places: in a _._x_s_c_r_e_e_n_s_a_v_e_r file in your home directory; or
       in the X resource database.   If  the  _._x_s_c_r_e_e_n_s_a_v_e_r  file
       exists,   it   overrides  any  settings  in  the  resource
       database.




X Version 11             20-Jun-99 (3.15)                       1





XScreenSaver(1)                                   XScreenSaver(1)


       The syntax of the _._x_s_c_r_e_e_n_s_a_v_e_r file is similar to that of
       the  _._X_d_e_f_a_u_l_t_s  file;  for  example,  to  set the _t_i_m_e_o_u_t
       paramter in the _._x_s_c_r_e_e_n_s_a_v_e_r file, you  would  write  the
       following:

            timeout: 5

       whereas, in the _._X_d_e_f_a_u_l_t_s file, you would write

            xscreensaver.timeout: 5

       If  you  change  a setting in the _._x_s_c_r_e_e_n_s_a_v_e_r file while
       xscreensaver is already running, it will notice this,  and
       reload the file.  (The file will be reloaded the next time
       the screen saver needs to take some action, such as blank-
       ing  or  unblanking  the screen, or picking a new graphics
       mode.)

       If you change a setting in your X resource database, or if
       you  want  xscreensaver to notice your changes immediately
       instead of the next time it wakes up, then you  will  need
       to  tell the running xscreensaver process to re-initialize
       itself, like so:

            xscreensaver-command -restart

       Note that if you changed the _._X_d_e_f_a_u_l_t_s  file,  you  might
       also need to run xxrrddbb(1):

            xrdb < ~/.Xdefaults

       If  you  want  to  set the system-wide defaults, then make
       your edits to the xscreensaver  app-defaults  file,  which
       should  have  been  installed when xscreensaver itself was
       installed.  The app-defaults file will  usually  be  named
       /usr/lib/X11/app-defaults/XScreenSaver, but different sys-
       tems might keep it in  a  different  place  (for  example,
       /usr/openwin/lib/app-defaults/XScreenSaver on Solaris.)

       When  settings  are  changed in the Preferences dialog box
       (see above) the current settings will be  written  to  the
       _._x_s_c_r_e_e_n_s_a_v_e_r  file.   (The  _._X_d_e_f_a_u_l_t_s  file and the app-
       defaults  file  will  never  be  written  by  xscreensaver
       itself.)


       ttiimmeeoouutt (class TTiimmee)
               The  screensaver  will activate (blank the screen)
               after the keyboard and mouse have  been  idle  for
               this many minutes.  Default 10 minutes.

       ccyyccllee (class TTiimmee)
               After  the  screensaver  has been running for this
               many minutes, the currently running  graphics-hack



X Version 11             20-Jun-99 (3.15)                       2





XScreenSaver(1)                                   XScreenSaver(1)


               sub-process  will  be killed (with SSIIGGTTEERRMM), and a
               new one started.  If this is 0, then the  graphics
               hack will never be changed: only one demo will run
               until  the  screensaver  is  deactivated  by  user
               activity.  Default 10 minutes.

       lloocckk (class BBoooolleeaann)
               Enable  locking:  before the screensaver will turn
               off, it will require you to type the  password  of
               the  logged-in  user  (really,  the person who ran
               xscreensaver), or the root password.  (NNoottee::  this
               doesn't  work  if  the  screensaver is launched by
               xxddmm(1) because it can't know the  user-id  of  the
               logged-in user.  See the ``_U_s_i_n_g _X_D_M_(_1_)'' section,
               below.

       lloocckkTTiimmeeoouutt (class TTiimmee)
               If locking is enabled, this controls the length of
               the  ``grace period'' between when the screensaver
               activates, and when  the  screen  becomes  locked.
               For  example,  if  this  is 5, and _-_t_i_m_e_o_u_t is 10,
               then after 10 minutes, the screen would blank.  If
               there was user activity at 12 minutes, no password
               would be required to un-blank the screen.  But, if
               there  was  user  activity  at 15 minutes or later
               (that is, _-_l_o_c_k_-_t_i_m_e_o_u_t minutes after  activation)
               then a password would be required.  The default is
               0, meaning that if  locking  is  enabled,  then  a
               password  will  be  required as soon as the screen
               blanks.

       ppaasssswwddTTiimmeeoouutt (class TTiimmee)
               If the screen is locked, then  this  is  how  many
               seconds  the password dialog box should be left on
               the screen before giving up (default 30  seconds.)
               This  should  not  be  too  large: the X server is
               grabbed for the duration that the password  dialog
               box  is up (for security purposes) and leaving the
               server grabbed for too long can cause problems.

       vviissuuaallIIDD (class VViissuuaallIIDD)
               Specify which X visual to use by  default.   (Note
               carefully  that  this resource is called vviissuuaallIIDD,
               not merely vviissuuaall; if you set the vviissuuaall  resource
               instead,  things  will malfunction in obscure ways
               for obscure reasons.)

               Legal values for the VViissuuaallIIDD resource are:

               ddeeffaauulltt Use  the  screen's  default  visual   (the
                       visual  of  the root window.)  This is the
                       default.

               bbeesstt    Use the visual  which  supports  the  most



X Version 11             20-Jun-99 (3.15)                       3





XScreenSaver(1)                                   XScreenSaver(1)


                       colors.   Note,  however,  that the visual
                       with the most colors might be a  TrueColor
                       visual,  which  does  not support colormap
                       animation.  Some programs have more inter-
                       esting  behavior  when  run on PseudoColor
                       visuals than on TrueColor.

               mmoonnoo    Use a monochrome visual, if there is  one.

               ggrraayy    Use  a  grayscale or staticgray visual, if
                       there is one and  it  has  more  than  one
                       plane (that is, it's not monochrome.)

               ccoolloorr   Use  the  best  of  the  color visuals, if
                       there are any.

               GGLL      Use the visual that  is  best  for  OpenGL
                       programs.   (OpenGL programs have somewhat
                       different requirements than other  X  pro-
                       grams.)

               _c_l_a_s_s   where  _c_l_a_s_s is one of SSttaattiiccGGrraayy, SSttaattiicc--
                       CCoolloorr, TTrruueeCCoolloorr, GGrraayySSccaallee,  PPsseeuuddooCCoolloorr,
                       or   DDiirreeccttCCoolloorr.    Selects  the  deepest
                       visual of the given class.

               _n_u_m_b_e_r  where _n_u_m_b_e_r (decimal or  hex)  is  inter-
                       preted  as a visual id number, as reported
                       by the xxddppyyiinnffoo(1) program;  in  this  way
                       you  can  have  finer control over exactly
                       which visual gets used,  for  example,  to
                       select  a  shallower one than would other-
                       wise have been chosen.

               Note that this option specifies only  the  _d_e_f_a_u_l_t
               visual  that  will be used: the visual used may be
               overridden on a program-by-program basis.  See the
               description of the pprrooggrraammss resource, below.

       iinnssttaallllCCoolloorrmmaapp (class BBoooolleeaann)
               Install  a  private colormap while the screensaver
               is active, so that the graphics hacks can  get  as
               many  colors  as  possible.   This is the default.
               (This  only  applies  when  the  screen's  default
               visual  is  being  used, since non-default visuals
               get their own colormaps automatically.)  This  can
               also  be  overridden  on a per-hack basis: see the
               discussion of the ddeeffaauulltt--nn name  in  the  section
               about the pprrooggrraammss resource.

       vveerrbboossee (class BBoooolleeaann)
               Whether to print diagnostics.  Default false.





X Version 11             20-Jun-99 (3.15)                       4





XScreenSaver(1)                                   XScreenSaver(1)


       ttiimmeessttaammpp (class BBoooolleeaann)
               Whether  to  print  the time of day along with any
               other diagnostic messages.  Default false.

       ssppllaasshh (class BBoooolleeaann)
               Whether to display a  splash  screen  at  startup.
               Default true.

       ssppllaasshhDDuurraattiioonn (class TTiimmee)
               How  long the splash screen should remain visible;
               default 5 seconds.

       hheellppUURRLL (class UURRLL)
               The splash screen has a _H_e_l_p button on  it.   When
               you  press  it, it will display the web page indi-
               cated here in your web browser.

       llooaaddUURRLL (class LLooaaddUURRLL)
               This is the shell command used to load a URL  into
               your  web  browser.  The default setting will load
               it into Netscape if it is already running,  other-
               wise,  will  launch  a new Netscape looking at the
               _h_e_l_p_U_R_L.

       ddeemmooCCoommmmaanndd (class DDeemmooCCoommmmaanndd)
               This is the shell command run when the _D_e_m_o button
               on  the  splash window is pressed.  It defaults to
               _x_s_c_r_e_e_n_s_a_v_e_r_-_d_e_m_o.

       pprreeffssCCoommmmaanndd (class PPrreeffssCCoommmmaanndd)
               This is the shell command run when the _P_r_e_f_s  but-
               ton  on the splash window is pressed.  It defaults
               to _x_s_c_r_e_e_n_s_a_v_e_r_-_d_e_m_o _-_p_r_e_f_s.

       nniiccee (class NNiiccee)
               The sub-processes created by _x_s_c_r_e_e_n_s_a_v_e_r will  be
               ``niced''  to  this  level, so that they are given
               lower priority than other processes on the system,
               and  don't  increase  the load unnecessarily.  The
               default is 10.

               (Higher numbers mean lower priority;  see  nniiccee(1)
               for details.)

       ffaaddee (class BBoooolleeaann)
               If  this  is true, then when the screensaver acti-
               vates, the current contents  of  the  screen  will
               fade to black instead of simply winking out.  This
               only works on displays  with  writable  colormaps,
               that is, if the screen's default visual is a Pseu-
               doColor visual.  A fade will  also  be  done  when
               switching  graphics  hacks  (when  the _c_y_c_l_e timer
               expires.)  Default: true.




X Version 11             20-Jun-99 (3.15)                       5





XScreenSaver(1)                                   XScreenSaver(1)


       uunnffaaddee (class BBoooolleeaann)
               If this is true, then when the screensaver deacti-
               vates,  the  original  contents of the screen will
               fade in from black instead  of  appearing  immedi-
               ately.   This only works on displays with writable
               colormaps, and if _f_a_d_e is true as  well.   Default
               false.

       ffaaddeeSSeeccoonnddss (class TTiimmee)
               If _f_a_d_e is true, this is how long the fade will be
               in seconds (default 3 seconds.)

       ffaaddeeTTiicckkss (class IInntteeggeerr)
               If _f_a_d_e is true, this is how many times  a  second
               the  colormap  will  be  changed to effect a fade.
               Higher numbers yield smoother fades, but may  make
               the  fades take longer than the specified _f_a_d_e_S_e_c_-
               _o_n_d_s if your server isn't fast enough to keep  up.
               Default 20.

       ccaappttuurreeSSttddeerrrr (class BBoooolleeaann)
               Whether  _x_s_c_r_e_e_n_s_a_v_e_r  should  redirect its stdout
               and stderr streams to the  window  itself.   Since
               its  nature  is to take over the screen, you would
               not  normally  see  error  messages  generated  by
               xscreensaver  or  the  sub-programs  it runs; this
               resource will cause the  output  of  all  relevant
               programs  to  be  drawn  on the screensaver window
               itself, as well as being written to  the  control-
               ling  terminal  of the screensaver driver process.
               Default true.

       ffoonntt (class FFoonntt)
               The font used for the stdout/stderr text, if  ccaapp--
               ttuurreeSSttddeerrrr         is        true.         Default
               **--mmeeddiiuumm--rr--**--114400--**--mm--**  (a  14  point  fixed-width
               font.)

       pprrooggrraammss (class PPrrooggrraammss)
               The  graphics  hacks  which _x_s_c_r_e_e_n_s_a_v_e_r runs when
               the user is idle.  The value of this resource is a
               string, one _s_h-syntax command per line.  Each line
               must contain exactly one command:  no  semicolons,
               no ampersands.

               When  the  screensaver  starts up, one of these is
               selected at random,  and  run.   After  the  _c_y_c_l_e
               period  expires,  it  is  killed,  and  another is
               selected and run.

               If the value of this resource is  empty,  then  no
               programs  will  be  run; the screen will simply be
               made black.




X Version 11             20-Jun-99 (3.15)                       6





XScreenSaver(1)                                   XScreenSaver(1)


               If the display has multiple screens, then  a  dif-
               ferent  program will be run for each screen.  (All
               screens are blanked and unblanked simultaniously.)

               Note that you must escape the newlines; here is an
               example  of  how  you  might  set  this  in   your
               _~_/_._x_s_c_r_e_e_n_s_a_v_e_r file:


                    programs:  \
                           qix -root                          \n\
                           ico -r -faces -sleep 1 -obj ico    \n\
                           xdaliclock -builtin2 -root         \n\
                           xv -root -rmode 5 image.gif -quit  \n

               Make  sure  your $$PPAATTHH environment variable is set
               up correctly _b_e_f_o_r_e xscreensaver is  launched,  or
               it  won't  be  able to find the programs listed in
               the _p_r_o_g_r_a_m_s resource.

               To use a program as a screensaver, two things  are
               required:  that that program draw on the root win-
               dow (or be able to be configured to  draw  on  the
               root  window);  and  that  that program understand
               ``virtual root'' windows, as used by virtual  win-
               dow  managers  such as ttvvttwwmm(1).  (Generally, this
               is accomplished by just  including  the  _"_v_r_o_o_t_._h_"
               header file in the program's source.)

               If  there  are  some programs that you want to run
               only when using a color display, and  others  that
               you  want to run only when using a monochrome dis-
               play, you can specify that like this:

                           mono:   mono-program  -root        \n\
                           color:  color-program -root        \n\

               More generally, you can specify the kind of visual
               that  should  be  used for the window on which the
               program will be drawing.  For example, if one pro-
               gram  works best if it has a colormap, but another
               works best if it has a 24-bit visual, both can  be
               accommodated:

                           PseudoColor: cmap-program  -root   \n\
                           TrueColor:   24bit-program -root   \n\

               In addition to the symbolic visual names described
               above (in the discussion of the _v_i_s_u_a_l_I_D resource)
               one other visual name is supported in the _p_r_o_g_r_a_m_s
               list:

                ddeeffaauulltt--nn
                    This is like ddeeffaauulltt, but also  requests  the



X Version 11             20-Jun-99 (3.15)                       7





XScreenSaver(1)                                   XScreenSaver(1)


                    use  of  the  default  colormap, instead of a
                    private colormap.  (That is, it behaves as if
                    the _-_n_o_-_i_n_s_t_a_l_l command-line option was spec-
                    ified, but only for  this  particular  hack.)
                    This  is  provided  because  some third-party
                    programs  that  draw  on  the   root   window
                    (notably:  xxvv(1), and xxeeaarrtthh(1)) make assump-
                    tions about the visual and  colormap  of  the
                    root  window:  assumptions which xscreensaver
                    can violate.

               If you specify a particular visual for a  program,
               and that visual does not exist on the screen, then
               that program will not  be  chosen  to  run.   This
               means  that  on  displays with multiple screens of
               different depths, you can arrange for  appropriate
               hacks  to  be  run  on  each.  For example, if one
               screen is color and the other is monochrome, hacks
               that  look  good  in  mono  can be run on one, and
               hacks that only look good in color will show up on
               the other.


       Normally you won't need to change the following resources:


       ppooiinntteerrPPoollllTTiimmee (class TTiimmee)
               When server extensions are not in use,  this  con-
               trols how frequently _x_s_c_r_e_e_n_s_a_v_e_r checks to see if
               the  mouse  position  or  buttons  have   changed.
               Default 5 seconds.

       wwiinnddoowwCCrreeaattiioonnTTiimmeeoouutt (class TTiimmee)
               When  server  extensions are not in use, this con-
               trols the delay between when windows  are  created
               and  when  _x_s_c_r_e_e_n_s_a_v_e_r  selects  events  on them.
               Default 30 seconds.

       iinniittiiaallDDeellaayy (class TTiimmee)
               When server extensions are not  in  use,  _x_s_c_r_e_e_n_-
               _s_a_v_e_r will wait this many seconds before selecting
               events on existing windows, under  the  assumption
               that  _x_s_c_r_e_e_n_s_a_v_e_r  is  started  during your login
               procedure, and the window state may  be  in  flux.
               Default  0.  (This used to default to 30, but that
               was back in the days when slow machines and X ter-
               minals were more common...)

       ssggiiSSaavveerrEExxtteennssiioonn (class BBoooolleeaann)
               There  are  a  number of different X server exten-
               sions which can make  xscreensaver's  job  easier.
               The  next  few  resources  specify  whether  these
               extensions should be utilized if they  are  avail-
               able.



X Version 11             20-Jun-99 (3.15)                       8





XScreenSaver(1)                                   XScreenSaver(1)


               This    resource    controls   whether   the   SGI
               SSCCRREEEENN__SSAAVVEERR server  extension  will  be  used  to
               decide  whether  the  user  is  idle.  This is the
               default if _x_s_c_r_e_e_n_s_a_v_e_r  has  been  compiled  with
               support  for  this extension (which is the default
               on  SGI  systems.).   If  it  is  available,   the
               SSCCRREEEENN__SSAAVVEERR  method  is  faster and more reliable
               than what will be done otherwise, so use it if you
               can.  (This extension is only available on Silicon
               Graphics systems, unfortunately.)

       mmiittSSaavveerrEExxtteennssiioonn (class BBoooolleeaann)
               This     resource     controls     whether     the
               MMIITT--SSCCRREEEENN--SSAAVVEERR  server extension will be used to
               decide whether the user  is  idle.   However,  the
               default  for  this resource is _f_a_l_s_e, because even
               if this extension is available, it is  flaky  (and
               it  also makes the ffaaddee option not work properly.)
               Use of this extension is not recommended.

       xxiiddlleeEExxtteennssiioonn (class BBoooolleeaann)
               This resource controls whether  the  XXIIDDLLEE  server
               extension  will be used to decide whether the user
               is idle.  This is the default if _x_s_c_r_e_e_n_s_a_v_e_r  has
               been  compiled  with  support  for this extension.
               (This extension is only available  for  X11R4  and
               X11R5 systems, unfortunately.)

       pprrooccIInntteerrrruuppttss (class BBoooolleeaann)
               This  resource  controls  whether the //pprroocc//iinntteerr--
               rruuppttss file should be consulted to  decide  whether
               the user is idle.  This is the default if _x_s_c_r_e_e_n_-
               _s_a_v_e_r has been compiled on a system which supports
               this mechanism (i.e., Linux systems.)

               The benefit to doing this is that _x_s_c_r_e_e_n_s_a_v_e_r can
               note that the user is active even when the X  con-
               sole  is not the active one: if the user is typing
               in  another  virtual  console,  xscreensaver  will
               notice  that and will fail to activate.  For exam-
               ple, if you're playing Quake in VGA-mode, xscreen-
               saver won't wake up in the middle of your game and
               start competing for CPU.

               The drawback to doing this  is  that  perhaps  you
               _r_e_a_l_l_y  _d_o want idleness on the X console to cause
               the X display to lock, even if there  is  activity
               on other virtual consoles.  If you want that, then
               set this option to False.  (Or  just  lock  the  X
               console manually.)

               The  default  value  for this resource is True, on
               systems where it works.




X Version 11             20-Jun-99 (3.15)                       9





XScreenSaver(1)                                   XScreenSaver(1)


       oovveerrllaayySSttddeerrrr (class BBoooolleeaann)
               If ccaappttuurreeSSttddeerrrr is True, and your server supports
               ``overlay'' visuals, then the text will be written
               into one of the higher layers instead of into  the
               same layer as the running screenhack.  Set this to
               False to disable that (though you  shouldn't  need
               to.)

       oovveerrllaayyTTeexxttFFoorreeggrroouunndd (class FFoorreeggrroouunndd)
               The  foreground  color  used for the stdout/stderr
               text, if ccaappttuurreeSSttddeerrrr is true.  Default:  Yellow.

       oovveerrllaayyTTeexxttBBaacckkggrroouunndd (class BBaacckkggrroouunndd)
               The  background  color  used for the stdout/stderr
               text, if ccaappttuurreeSSttddeerrrr is true.  Default: Black.

       bboouurrnneeSShheellll (class BBoouurrnneeSShheellll)
               The pathname of the shell that  _x_s_c_r_e_e_n_s_a_v_e_r  uses
               to start subprocesses.  This must be whatever your
               local variant of //bbiinn//sshh  is:  in  particular,  it
               must not be ccsshh.

CCOOMMMMAANNDD--LLIINNEE OOPPTTIIOONNSS
       _x_s_c_r_e_e_n_s_a_v_e_r  also  accepts  the  following  command  line
       options.  Except for the _-_d_i_s_p_l_a_y option,  these  command-
       line  options are all simply shorthand for the X resources
       described in the _C_o_n_f_i_g_u_r_a_t_i_o_n section, above.

       --ddiissppllaayy _h_o_s_t_:_d_i_s_p_l_a_y_._s_c_r_e_e_n
               The X display to use.  For displays with  multiple
               screens,  XScreenSaver  will manage all screens on
               the display simultaniously;  the  _s_c_r_e_e_n  argument
               (the  ``default'' screen) says which screen should
               be used for dialog  boxes  (the  password  window,
               _D_e_m_o _M_o_d_e, etc.)

       --ttiimmeeoouutt _m_i_n_u_t_e_s
               Same as the _t_i_m_e_o_u_t resource.

       --ccyyccllee _m_i_n_u_t_e_s
               Same as the _c_y_c_l_e resource.

       --lloocckk--mmooddee
               Same as setting the _l_o_c_k resource to _t_r_u_e.

       --nnoo--lloocckk--mmooddee
               Same as setting the _l_o_c_k resource to _f_a_l_s_e.

       --lloocckk--ttiimmeeoouutt _m_i_n_u_t_e_s
               Same as the _l_o_c_k_T_i_m_e_o_u_t resource.

       --vviissuuaall _v_i_s_u_a_l
               Same as the _v_i_s_u_a_l_I_D resource.




X Version 11             20-Jun-99 (3.15)                      10





XScreenSaver(1)                                   XScreenSaver(1)


       --iinnssttaallll
               Same  as  setting  the _i_n_s_t_a_l_l_C_o_l_o_r_m_a_p resource to
               _t_r_u_e.

       --nnoo--iinnssttaallll
               Same as setting the  _i_n_s_t_a_l_l_C_o_l_o_r_m_a_p  resource  to
               _f_a_l_s_e.

       --vveerrbboossee
               Same as setting the _v_e_r_b_o_s_e resource to _t_r_u_e.

       --ssiilleenntt Same as setting the _v_e_r_b_o_s_e resource to _f_a_l_s_e.

       --ttiimmeessttaammpp
               Same as setting the _t_i_m_e_s_t_a_m_p resource to _t_r_u_e.

       --ccaappttuurree--ssttddeerrrr
               Same  as  setting  the  _c_a_p_t_u_r_e_S_t_d_e_r_r  resource to
               _t_r_u_e.

       --nnoo--ccaappttuurree--ssttddeerrrr
               Same as  setting  the  _c_a_p_t_u_r_e_S_t_d_e_r_r  resource  to
               _f_a_l_s_e.

       --ssppllaasshh Same as setting the _s_p_l_a_s_h resource to _t_r_u_e.

       --nnoo--ssppllaasshh
               Same as setting the _s_p_l_a_s_h resource to _f_a_l_s_e.

       --nniiccee _i_n_t_e_g_e_r
               Same as the _n_i_c_e resource.

       --ssggii--eexxtteennssiioonn
               Same  as setting the _s_g_i_S_a_v_e_r_E_x_t_e_n_s_i_o_n resource to
               _t_r_u_e.

       --nnoo--ssggii--eexxtteennssiioonn
               Same as setting the _s_g_i_S_a_v_e_r_E_x_t_e_n_s_i_o_n resource  to
               _f_a_l_s_e.

       --mmiitt--eexxtteennssiioonn
               Same  as setting the _m_i_t_S_a_v_e_r_E_x_t_e_n_s_i_o_n resource to
               _t_r_u_e.

       --nnoo--mmiitt--eexxtteennssiioonn
               Same as setting the _m_i_t_S_a_v_e_r_E_x_t_e_n_s_i_o_n resource  to
               _f_a_l_s_e.

       --xxiiddllee--eexxtteennssiioonn
               Same  as  setting  the  _x_i_d_l_e_E_x_t_e_n_s_i_o_n resource to
               _t_r_u_e.

       --nnoo--xxiiddllee--eexxtteennssiioonn
               Same as setting  the  _x_i_d_l_e_E_x_t_e_n_s_i_o_n  resource  to



X Version 11             20-Jun-99 (3.15)                      11





XScreenSaver(1)                                   XScreenSaver(1)


               _f_a_l_s_e.

       --pprroocc--iinntteerrrruuppttss
               Same  as  setting  the  _p_r_o_c_I_n_t_e_r_r_u_p_t_s resource to
               _t_r_u_e.

       --nnoo--pprroocc--iinntteerrrruuppttss
               Same as setting  the  _p_r_o_c_I_n_t_e_r_r_u_p_t_s  resource  to
               _f_a_l_s_e.

       --xxrrmm _r_e_s_o_u_r_c_e_-_s_p_e_c_i_f_i_c_a_t_i_o_n
               As  with  all other Xt programs, you can specify X
               resources on the command-line using the _-_x_r_m argu-
               ment.  Most of the interesting resources have com-
               mand-line equivalents, however.

HHOOWW IITT WWOORRKKSS
       When it is time to activate the screensaver, a full-screen
       black  window  is  created  on each screen of the display.
       Each window is created in such a way that, to  any  subse-
       quently-created programs, it will appear to be a ``virtual
       root'' window.  Because of this, any program  which  draws
       on  the  root window (and which understands virtual roots)
       can be used as a screensaver.

       When the user becomes active again, the  screensaver  win-
       dows are unmapped, and the running subprocesses are killed
       by sending them SSIIGGTTEERRMM.  This is  also  how  the  subpro-
       cesses  are  killed when the screensaver decides that it's
       time to run a different demo: the old one is killed and  a
       new one is launched.

       Before  launching  a  subprocess,  _x_s_c_r_e_e_n_s_a_v_e_r  stores an
       appropriate value for $$DDIISSPPLLAAYY in the environment that the
       child  will  recieve.   (This  is  so  that  if  you start
       _x_s_c_r_e_e_n_s_a_v_e_r with a _-_d_i_s_p_l_a_y argument, the programs  which
       _x_s_c_r_e_e_n_s_a_v_e_r  launches  will draw on the same display; and
       so that the child will end up drawing on  the  appropriate
       screen of a multi-headed display.)

       When  the  screensaver  turns  off,  or is killed, care is
       taken to restore the ``real'' virtual root window if there
       is  one.   Because  of  this, it is important that you not
       kill the screensaver process with _k_i_l_l _-_9 if you are  run-
       ning  a  virtual-root window manager.  If you kill it with
       -9, you may need to restart your window manager to  repair
       the  damage.   This isn't an issue if you aren't running a
       virtual-root window manager.

       For all the gory details, see the commentary at the top of
       xscreensaver.c.

       You can control a running screensaver process by using the
       xxssccrreeeennssaavveerr--ccoommmmaanndd(1) program (which see.)



X Version 11             20-Jun-99 (3.15)                      12





XScreenSaver(1)                                   XScreenSaver(1)


PPOOWWEERR MMAANNAAGGEEMMEENNTT
       Modern X servers contain support to power down the monitor
       after  an  idle  period.  If the monitor has powered down,
       then _x_s_c_r_e_e_n_s_a_v_e_r will notice this, and will not waste CPU
       by  drawing  graphics demos on a black screen.  An attempt
       will also be made to explicitly power the monitor back  up
       as soon as user activity is detected.

       If  your  X server supports power management, then xxsseett(1)
       will accept a ddppmmss option.  So, if you wanted _x_s_c_r_e_e_n_s_a_v_e_r
       to  activate  after 5 minutes, but you wanted your monitor
       to power down after one hour (3600 seconds) you  would  do
       this:

            xset dpms 3600

       See  the  man  page  for  the xxsseett(1) program for details.
       (Note that power management requires both software support
       in  the  X  server,  and  hardware  support in the monitor
       itself.)

UUSSIINNGG XXDDMM((11))
       You can run _x_s_c_r_e_e_n_s_a_v_e_r from your xxddmm(1) session, so that
       the  screensaver will run even when nobody is logged in on
       the console.

       The trick to using xscreensaver with _x_d_m is this: keep  in
       mind  the  two very different states in which xscreensaver
       will be running:

           11:: NNoobbooddyy llooggggeedd iinn..

              If you're thinking of running xscreensaver from XDM
              at  all, then it's probably because you want graph-
              ics demos to be running on the console when  nobody
              is  logged  in  there.   In this case, xscreensaver
              will function only as a screen saver, not a  screen
              locker:  it  doesn't make sense for xscreensaver to
              lock the screen, since nobody  is  logged  in  yet!
              The  only  thing  on  the  screen  is the XDM login
              prompt.

           22:: SSoommeebbooddyy llooggggeedd iinn..

              Once someone has logged in through  the  XDM  login
              window, the situation is very different.  For exam-
              ple: now it makes sense to  lock  the  screen  (and
              prompt  for the logged in user's password); and now
              xscreensaver should consult that user's _~_/_._x_s_c_r_e_e_n_-
              _s_a_v_e_r file; and so on.

       The  difference  between  these two states comes down to a
       question of, which user is the _x_s_c_r_e_e_n_s_a_v_e_r  process  run-
       ning  as?  For the first state, it doesn't matter.  If you



X Version 11             20-Jun-99 (3.15)                      13





XScreenSaver(1)                                   XScreenSaver(1)


       start _x_s_c_r_e_e_n_s_a_v_e_r in the usual XDM way, then xscreensaver
       will  probably  end  up running as root, which is fine for
       the first case (the ``nobody logged in'' case.)

       However, once someone is logged in, running as root is  no
       longer  fine:  because  xscreensaver  will  be  consulting
       root's _._x_s_c_r_e_e_n_s_a_v_e_r file instead of that of the logged in
       user,  and  won't  be  prompting  for the logged in user's
       password, and so on.  (This is  not  a  security  problem,
       it's just not what you want.)

       So,  once  someone has logged in, you want xscreensaver to
       be running as that user.  The way to accomplish this is to
       kill  the old xscreensaver process and start a new one (as
       the new user.)

       The simplest way to accomplish all of this is as follows:

           11:: LLaauunncchh xxssccrreeeennssaavveerr bbeeffoorree aannyyoonnee llooggss iinn..

              To the file _/_u_s_r_/_l_i_b_/_X_1_1_/_x_d_m_/_X_s_e_t_u_p, add the lines

                   xscreensaver-command -exit
                   xscreensaver &

              This will run xscreensaver as root,  over  the  XDM
              login  window.   Moving  the  mouse  will cause the
              screen to un-blank, and  allow  the  user  to  type
              their password at XDM to log in.

           22:: RReessttaarrtt xxssccrreeeennssaavveerr wwhheenn ssoommeeoonnee llooggss iinn..

              Near the top of the file _/_u_s_r_/_l_i_b_/_X_1_1_/_x_d_m_/_X_s_e_s_s_i_o_n,
              add those same lines:

                   xscreensaver-command -exit
                   xscreensaver &

              When someone logs in, this will kill off the exist-
              ing  (root)  xscreensaver  process, and start a new
              one, running as the user who has  just  logged  in.
              If  the user's .xscreensaver file requests locking,
              they'll get it.   They  will  also  get  their  own
              choice  of timeouts, and graphics demos, and so on.

              Alternately, each user could just put  those  lines
              in their personal _~_/_._x_s_e_s_s_i_o_n files.

       Make  sure  you  have $$PPAATTHH set up correctly in the _X_s_e_t_u_p
       and _X_s_e_s_s_i_o_n  scripts,  or  _x_d_m  won't  be  able  to  find
       _x_s_c_r_e_e_n_s_a_v_e_r,  and/or  _x_s_c_r_e_e_n_s_a_v_e_r  won't be able to find
       its graphics demos.

       (If your system does not seem to be executing  the  _X_s_e_t_u_p



X Version 11             20-Jun-99 (3.15)                      14





XScreenSaver(1)                                   XScreenSaver(1)


       file,  you  may  need to configure it to do so: the tradi-
       tional way to do this is to make that file  the  value  of
       the      _D_i_s_p_l_a_y_M_a_n_a_g_e_r_*_s_e_t_u_p      resource     in     the
       _/_u_s_r_/_l_i_b_/_X_1_1_/_x_d_m_/_x_d_m_-_c_o_n_f_i_g file.  See the  man  page  for
       xxddmm(1) for more details.)

       It  is  safe to run _x_s_c_r_e_e_n_s_a_v_e_r as root (as _x_d_m is likely
       to do.)  If run as root, _x_s_c_r_e_e_n_s_a_v_e_r changes  its  effec-
       tive  user and group ids to something safe (like _"_n_o_b_o_d_y_")
       before connecting to the X server or launching user-speci-
       fied programs.

       An  unfortunate  side  effect of this (important) security
       precaution is  that  it  may  conflict  with  cookie-based
       authentication.

       If  you  get  "connection  refused"  errors  when  running
       _x_s_c_r_e_e_n_s_a_v_e_r from _x_d_m, then this probably means  that  you
       have  xxaauutthh(1) or some other security mechanism turned on.
       One way  around  this  is  to  add  ""xxhhoosstt ++llooccaallhhoosstt""  to
       _X_s_e_t_u_p, just before _x_s_c_r_e_e_n_s_a_v_e_r is launched.

       Note  that this will give access to the X server to anyone
       capable of logging in to the local  machine,  so  in  some
       environments,  this  might not be appropriate.  If turning
       off file-system-based access control  is  not  acceptable,
       then  running  _x_s_c_r_e_e_n_s_a_v_e_r from the _X_s_e_t_u_p file might not
       be possible, and xscreensaver will only work when  running
       as a normal, unprivileged user.

       For  more  information  on  the  X server's access control
       mechanisms, see the  man  pages  for  XX(1),  XXsseeccuurriittyy(1),
       xxaauutthh(1), and xxhhoosstt(1).

UUSSIINNGG CCDDEE ((CCOOMMMMOONN DDEESSKKTTOOPP EENNVVIIRROONNMMEENNTT))
       The  easiest  way to use _x_s_c_r_e_e_n_s_a_v_e_r on a system with CDE
       is to simply switch off the built-in CDE screensaver,  and
       use  _x_s_c_r_e_e_n_s_a_v_e_r  instead;  and second, to tell the front
       panel to run xxssccrreeeennssaavveerr--ccoommmmaanndd(1) with the _-_l_o_c_k option
       when the _L_o_c_k icon is clicked.

       To accomplish this involves five steps:

           11:: SSwwiittcchh ooffff CCDDEE''ss lloocckkeerr
              Do  this  by  turning off ``_S_c_r_e_e_n _S_a_v_e_r _a_n_d _S_c_r_e_e_n
              _L_o_c_k'' in the Screen section of the Style  Manager.

           22:: EEddiitt sseessssiioonneettcc
              Edit  the file _~_/_._d_t_/_s_e_s_s_i_o_n_s_/_s_e_s_s_i_o_n_e_t_c and add to
              it the line

                   xscreensaver &

              This will cause _x_s_c_r_e_e_n_s_a_v_e_r to  be  launched  when



X Version 11             20-Jun-99 (3.15)                      15





XScreenSaver(1)                                   XScreenSaver(1)


              you  log  in.   (As always, make sure that xscreen-
              saver and the graphics demos are on your $$PPAATTHH; the
              path  needs  to be set in _._c_s_h_r_c and/or _._d_t_p_r_o_f_i_l_e,
              not _._l_o_g_i_n.)

           33:: CCrreeaattee XXSSccrreeeennSSaavveerr..ddtt
              Create a  file  called  _~_/_._d_t_/_t_y_p_e_s_/_X_S_c_r_e_e_n_S_a_v_e_r_._d_t
              with the following contents:

                   ACTION XScreenSaver
                   {
                     LABEL         XScreenSaver
                     TYPE          COMMAND
                     EXEC_STRING   xscreensaver-command -lock
                     ICON          Dtkey
                     WINDOW_TYPE   NO_STDIO
                   }

              This  defines  a ``lock'' command for the CDE front
              panel, that knows how to talk to _x_s_c_r_e_e_n_s_a_v_e_r.

           44:: CCrreeaattee LLoocckk..ffpp
              Create a file called _~_/_._d_t_/_t_y_p_e_s_/_L_o_c_k_._f_p  with  the
              following contents:

                   CONTROL Lock
                   {
                     TYPE             icon
                     CONTAINER_NAME   Switch
                     CONTAINER_TYPE   SWITCH
                     POSITION_HINTS   1
                     ICON             Fplock
                     LABEL            Lock
                     PUSH_ACTION      XScreenSaver
                     HELP_TOPIC       FPOnItemLock
                     HELP_VOLUME      FPanel
                   }

              This  associates  the CDE front panel ``Lock'' icon
              with the lock command we just defined in step 3.

           55:: RReessttaarrtt
              Select ``_R_e_s_t_a_r_t _W_o_r_k_s_p_a_c_e _M_a_n_a_g_e_r'' from the popup
              menu  to  make your changes take effect.  If things
              seem not to be working, check the file _~_/_._d_t_/_e_r_r_o_r_-
              _l_o_g for error messages.

UUSSIINNGG HHPP VVUUEE ((VVIISSUUAALL UUSSEERR EENNVVIIRROONNMMEENNTT))
       Since  CDE  is  a  descendant of VUE, the instructions for
       using xscreensaver under VUE are similar to the above:

           11:: SSwwiittcchh ooffff VVUUEE''ss lloocckkeerr
              Open the ``_S_t_y_l_e _M_a_n_a_g_e_r'' and  select  ``_S_c_r_e_e_n.''
              Turn off ``_S_c_r_e_e_n _S_a_v_e_r _a_n_d _S_c_r_e_e_n _L_o_c_k'' option.



X Version 11             20-Jun-99 (3.15)                      16





XScreenSaver(1)                                   XScreenSaver(1)


           22:: MMaakkee ssuurree yyoouu hhaavvee aa SSeessssiioonn
              Next,  go to the Style Manager's, ``_S_t_a_r_t_u_p'' page.
              Click on ``_S_e_t _H_o_m_e _S_e_s_s_i_o_n'' to create a  session,
              then  on  ``_R_e_t_u_r_n _t_o _H_o_m_e _S_e_s_s_i_o_n'' to select this
              session each time you log in.

           33:: EEddiitt vvuuee..sseessssiioonn
              Edit the file _~_/_._v_u_e_/_s_e_s_s_i_o_n_s_/_h_o_m_e_/_v_u_e_._s_e_s_s_i_o_n  and
              add to it the line

                   vuesmcmd -screen 0 -cmd "xscreensaver"

              This  will  cause  _x_s_c_r_e_e_n_s_a_v_e_r to be launched when
              you log in.  (As always, make  sure  that  xscreen-
              saver and the graphics demos are on your $$PPAATTHH; the
              path needs to be set in _._c_s_h_r_c and/or _._p_r_o_f_i_l_e, not
              _._l_o_g_i_n.)

           33:: EEddiitt vvuueewwmmrrcc
              Edit  the  file  _~_/_._v_u_e_/_v_u_e_w_m_r_c and add (or change)
              the Lock control:

                   CONTROL Lock
                   {
                     TYPE         button
                     IMAGE        lock
                     PUSH_ACTION  f.exec "xscreensaver-command -lock"
                     HELP_TOPIC   FPLock
                   }

              This associates the VUE front panel  ``Lock''  icon
              with the xscreensaver lock command.


AADDDDIINNGG TTOO MMEENNUUSS
       The xxssccrreeeennssaavveerr--ccoommmmaanndd(1) program is a perfect candidate
       for something to add to your window manager's popup menus.
       If  you  use mmwwmm(1), 44DDwwmm(1), ttwwmm(1), or (probably) any of
       _t_w_m's many descendants, you can do it like this:

       11.. CCrreeaattee ~~//..mmwwmmrrcc ((oorr ~~//..ttwwmmrrcc oorr ......))
          If you don't have a  _~_/_._m_w_m_r_c  file  (or,  on  SGIs,  a
          _~_/_._4_D_w_m_r_c  file;  or,  with  twm, a _~_/_._t_w_m_r_c file) then
          create one by making a copy  of  the  _/_u_s_r_/_l_i_b_/_X_1_1_/_s_y_s_-
          _t_e_m_._m_w_m_r_c  file  (or _/_u_s_r_/_l_i_b_/_X_1_1_/_t_w_m_/_s_y_s_t_e_m_._t_w_m_r_c, and
          so on.)

       22.. AAdddd aa mmeennuu ddeeffiinniittiioonn..
          Something like this:

               menu XScreenSaver
               {
                "Blank Screen Now" !"sleep 3; xscreensaver-command -activate"
                "Lock Screen Now"  !"sleep 3; xscreensaver-command -lock"



X Version 11             20-Jun-99 (3.15)                      17





XScreenSaver(1)                                   XScreenSaver(1)


                "Screen Saver Demo"         !"xscreensaver-demo"
                "Screen Saver Preferences"  !"xscreensaver-demo -prefs"
                "Reinitialize Screen Saver" !"xscreensaver-command -restart"
                "Kill Screen Saver"         !"xscreensaver-command -exit"
                "Launch Screen Saver"       !"xscreensaver &"
               }


       33.. AAdddd tthhee mmeennuu
          For mmwwmm(1) and 44DDwwmm(1), find the section  of  the  file
          that  says  _M_e_n_u  _D_e_f_a_u_l_t_R_o_o_t_M_e_n_u.  For ttwwmm(1), it will
          probably be _m_e_n_u _"_d_e_f_o_p_s_".  If you add a line somewhere
          in that menu definition that reads

                 "XScreenSaver"        f.menu XScreenSaver

          then  this  will  add  an XScreenSaver sub-menu to your
          default root-window popup menu.  Alternately, you could
          just  put the xscreensaver menu items directly into the
          root menu.

       Other window managers are guaranteed to do  things  gratu-
       itously differently.

BBUUGGSS
       Bugs?   There  are no bugs.  Ok, well, maybe.  If you find
       one,  please  let  me  know.   http://www.jwz.org/xscreen-
       saver/bugs.html  explains how to construct the most useful
       bug reports.

       LLoocckkiinngg aanndd XXDDMM
               If xscreensaver  has  been  launched  from  xxddmm(1)
               before anyone has logged in, you will need to kill
               and then restart the xscreensaver daemon after you
               have  logged  in,  or  you will be confused by the
               results.  (For example, locking  won't  work,  and
               your _~_/_._x_s_c_r_e_e_n_s_a_v_e_r file will be ignored.)

               When  you are logged in, you want the _x_s_c_r_e_e_n_s_a_v_e_r
               daemon to be running under _y_o_u_r user  id,  not  as
               root or some other user.

               If  it  has  already  been started by _x_d_m, you can
               kill it by sending it the eexxiitt command,  and  then
               re-launching  it as you, by putting something like
               the following in your personal X startup script:

                    xscreensaver-command -exit
                    xscreensaver &

               The ``_U_s_i_n_g _X_D_M_(_1_)''  section,  above,  goes  into
               more  detail,  and  explains  how to configure the
               system to do this for all users automatically.




X Version 11             20-Jun-99 (3.15)                      18





XScreenSaver(1)                                   XScreenSaver(1)


       LLoocckkiinngg aanndd rroooott llooggiinnss
               In order for it to be safe for xscreensaver to  be
               launched  by  _x_d_m,  certain  precautions had to be
               taken, among them that xscreensaver never runs  as
               _r_o_o_t.   In  particular,  if it is launched as root
               (as _x_d_m is likely to do), xscreensaver  will  dis-
               avow  its  privileges, and switch itself to a safe
               user id (such as _n_o_b_o_d_y.)

               An implication of this is that if you  log  in  as
               _r_o_o_t  on  the console, xscreensaver will refuse to
               lock the screen (because it can't tell the differ-
               ence  between _r_o_o_t being logged in on the console,
               and a normal user being logged in on  the  console
               but  xscreensaver  having  been  launched  by  the
               xxddmm(1) _X_s_e_t_u_p file.)

               The solution to this is simple: you  shouldn't  be
               logging  in  on  the  console as _r_o_o_t in the first
               place!  (What, are you crazy or something?)

               Proper Unix hygiene dictates that you  should  log
               in  as  yourself,  and ssuu(1) to _r_o_o_t as necessary.
               People who spend their day logged in as  _r_o_o_t  are
               just begging for disaster.

       XXAAUUTTHH aanndd XXDDMM
               For  xscreensaver to work when launched by xxddmm(1),
               programs running on  the  local  machine  as  user
               _"_n_o_b_o_d_y_"  must be able to connect to the X server.
               This means that if you want to run xscreensaver on
               the  console  while  nobody  is logged in, you may
               need to disable cookie-based access  control  (and
               allow  all  users  who  can  log  in  to the local
               machine to connect to the display.)

               You should be sure  that  this  is  an  acceptable
               thing  to  do in your environment before doing it.
               See the ``_U_s_i_n_g _X_D_M_(_1_)'' section, above, for  more
               details.

               If  anyone  has  suggestions  on  how xscreensaver
               could be made to work with  xxddmm(1)  without  first
               turning   off  _._X_a_u_t_h_o_r_i_t_y-based  access  control,
               please let me know.

       PPaasssswwoorrddss
               If you  get  an  error  message  at  startup  like
               ``couldn't get password of _u_s_e_r'' then this proba-
               bly means that you're on a  system  in  which  the
               ggeettppwweenntt(3)  library  routine  can  only be effec-
               tively used by root.  If this is  the  case,  then
               _x_s_c_r_e_e_n_s_a_v_e_r  must  be installed as setuid to root
               in order for locking to work.  Care has been taken



X Version 11             20-Jun-99 (3.15)                      19





XScreenSaver(1)                                   XScreenSaver(1)


               to make this a safe thing to do.

               It  also  may  mean  that  your system uses shadow
               passwords  instead  of  the  standard  ggeettppwweenntt(3)
               interface;  in  that  case, you may need to change
               some options with _c_o_n_f_i_g_u_r_e and recompile.

               If you change your password after xscreensaver has
               been  launched,  it  will  continue using your old
               password to unlock the screen  until  xscreensaver
               is restarted.  So, after you change your password,
               you'll have to do

                    xscreensaver-command -restart

               to make _x_s_c_r_e_e_n_s_a_v_e_r notice.

       PPAAMM PPaasssswwoorrddss
               If your system uses PAM (Pluggable  Authentication
               Modules),  then  in  order for xscreensaver to use
               PAM properly, PAM must be told about xscreensaver.
               The   xscreensaver   installation  process  should
               update the PAM data (on  Linux,  by  creating  the
               file   _/_e_t_c_/_p_a_m_._d_/_x_s_c_r_e_e_n_s_a_v_e_r  for  you,  and  on
               Solaris, by telling you what lines to add  to  the
               _/_e_t_c_/_p_a_m_._c_o_n_f file.)

               If  the  PAM configuration files do not know about
               xscreensaver, then you _m_i_g_h_t  be  in  a  situation
               where  xscreensaver will refuse to ever unlock the
               screen.

               This is a design flaw in PAM (there is no way  for
               a  client  to  tell  the  difference  between  PAM
               responding ``I have never heard of your  module,''
               and responding, ``you typed the wrong password.'')
               As far as I can tell, there is no way for xscreen-
               saver to automatically work around this, or detect
               the problem in advance, so if you have  PAM,  make
               sure it is configured correctly!

       CCoolloorrmmaapp lloossssaaggee:: TTWWMM
               The  iinnssttaallllCCoolloorrmmaapp option doesn't work very well
               with the ttwwmm(1) window  manager  and  its  descen-
               dants.

               There  is a race condition between the screensaver
               and this window manager, which can result  in  the
               screensaver's colormap not getting installed prop-
               erly, meaning the graphics hacks  will  appear  in
               essentially  random  colors.   (If the screen goes
               white instead of black, this is probably why.)

               The mmwwmm(1) and oollwwmm(1) window managers don't  have



X Version 11             20-Jun-99 (3.15)                      20





XScreenSaver(1)                                   XScreenSaver(1)


               this problem.  The race condition exists because X
               (really, ICCCM) does not  provide  a  way  for  an
               OverrideRedirect  window to have its own colormap,
               short of grabbing the server (which is  neither  a
               good  idea,  nor  really possible with the current
               design.)   What  happens  is  that,  as  soon   as
               xscreensaver  installs  its colormap, ttwwmm responds
               to  the  resultant  CCoolloorrmmaappNNoottiiffyy  event  by  re-
               instaling  the  default colormap.  Apparently, ttwwmm
               doesn't _a_l_w_a_y_s do this; it seems to  do  it  regu-
               larly  if the screensaver is activated from a menu
               item, but seems to not do it  if  the  screensaver
               comes on of its own volition, or is activated from
               another console.

               AAtttteennttiioonn,, wwiinnddooww mmaannaaggeerr aauutthhoorrss!!
                   You should only  call  XXIInnssttaallllCCoolloorrmmaapp(3)  in
                   response  to  user  events.   That  is,  it is
                   appropriate to install a colormap in  response
                   to   FFooccuussIInn,   FFooccuussOOuutt,   EEnntteerrNNoottiiffyy,   and
                   LLeeaavveeNNoottiiffyy events; but it is not  appropriate
                   to  call  it  in  response  to  CCoolloorrmmaappNNoottiiffyy
                   events.  If you install colormaps in  response
                   to  _a_p_p_l_i_c_a_t_i_o_n actions as well as in response
                   to _u_s_e_r actions, then you create the situation
                   where  it  is impossible for override-redirect
                   applications (such as xscreensaver) to display
                   their windows in the proper colors.

       CCoolloorrmmaapp lloossssaaggee:: XXVV,, XXAAnniimm,, XXEEaarrtthh
               Some  programs  don't  operate properly on visuals
               other than the  default  one,  or  with  colormaps
               other than the default one.  See the discussion of
               the magic "default-n" visual name in the  descrip-
               tion of the pprrooggrraammss resource in the _C_o_n_f_i_g_u_r_a_t_i_o_n
               section.  When programs only work with the default
               colormap, you need to use a syntax like this:

                       default-n: xv -root image-1.gif -quit  \n\
                       default-n: xearth -nostars -wait 0     \n\

               It would also work to turn off the iinnssttaallllCCoolloorrmmaapp
               option altogether, but that would deny extra  col-
               ors  to  those programs that _c_a_n take advantage of
               them.

       MMaacchhiinnee LLooaadd
               Although this program ``nices''  the  subprocesses
               that it starts, graphics-intensive subprograms can
               still overload the machine by causing the X server
               process  itself (which is not ``niced'') to suck a
               lot of cycles.  Care should be taken to slow  down
               programs  intended  for  use  as  screensavers  by
               inserting strategic calls to sslleeeepp(3) or uusslleeeepp(3)



X Version 11             20-Jun-99 (3.15)                      21





XScreenSaver(1)                                   XScreenSaver(1)


               (or making liberal use of any _-_d_e_l_a_y options which
               the programs may provide.)

               Note that the OpenGL-based graphics demos are real
               pigs on machines that don't have texture hardware.

               Also, an active  screensaver  will  cause  your  X
               server  to  be pretty much permanently swapped in;
               but the same is true of  any  program  that  draws
               periodically, like xxcclloocckk(1) or xxllooaadd(1).

       LLaatteennccyy aanndd RReessppoonnssiivveenneessss
               If  the  subprocess is drawing too quickly and the
               connection to the X server is a slow one (such  as
               an  X terminal running over a phone line) then the
               screensaver might not turn off right away when the
               user  becomes  active  again  (the iiccoo(1) demo has
               this problem if being  run  in  full-speed  mode).
               This  can  be  alleviated  by  inserting strategic
               calls to XXSSyynncc(3) in code intended for  use  as  a
               screensaver.   This  prevents  too  much  graphics
               activity from being buffered up.

       XXFFrreeee8866''ss MMaaggiicc KKeeyyssttrrookkeess
               The  XFree86  X   server   traps   certain   magic
               keystrokes  before  client programs ever see them.
               Two that are of note are Ctrl+Alt+Backspace, which
               causes  the  X  server  to  exit; and Ctrl+Alt+F_n,
               which switches virtual  consoles.   The  X  server
               will  respond to these keystrokes even if xscreen-
               saver has the screen locked.   Depending  on  your
               setup, you might consider this a problem.

               Unfortunately,  there  is  no way for xscreensaver
               itself to override  the  interpretation  of  these
               keys.   If  you want to disable Ctrl+Alt+Backspace
               globally, you need to set the _D_o_n_t_Z_a_p flag in your
               _/_e_t_c_/_X_1_1_/_X_F_8_6_C_o_n_f_i_g  file.   See the XXFF8866CCoonnffiigg(5)
               manual for details.

               There is no way (as far as I can tell) to  disable
               the VT-switching keystrokes.

               Some  Linux  systems  come  with  a  VT_LOCKSWITCH
               ioctl, that one could theoretically use to prevent
               VT-switching  while  the  screen  is  locked;  but
               unfortunately, this ioctl  can  only  be  used  by
               root,  which  means that xscreensaver can't use it
               (since  xscreensaver   disavows   its   privileges
               shortly after startup, for security reasons.)

               Any  suggestions for other solutions to this prob-
               lem are welcome.




X Version 11             20-Jun-99 (3.15)                      22





XScreenSaver(1)                                   XScreenSaver(1)


       XXVViieeww CClliieennttss
               Apparently there are some problems with XView pro-
               grams  getting  confused  and  thinking  that  the
               screensaver window is the real  root  window  even
               when the screensaver is not active: ClientMessages
               intended for the window manager are  sent  to  the
               screensaver  window instead.  This could be solved
               by making xscreensaver  forward  all  unrecognised
               ClientMessages  to the real root window, but there
               may be other problems as well.  If anyone has  any
               insight  on  the cause of this problem, please let
               me know.  (XView is an X11 toolkit that implements
               the  (quite  abominable)  Sun  OpenLook  look-and-
               feel.)

       MMIITT EExxtteennssiioonn aanndd FFaaddiinngg
               The MMIITT--SSCCRREEEENN--SSAAVVEERR extension is junk.  Don't use
               it.

               When  using the MMIITT--SSCCRREEEENN--SSAAVVEERR extension in con-
               junction with the ffaaddee option,  you'll  notice  an
               unattractive  flicker just before the fade begins.
               This is because the server  maps  a  black  window
               just  before  it tells the _x_s_c_r_e_e_n_s_a_v_e_r process to
               activate.  The  _x_s_c_r_e_e_n_s_a_v_e_r  process  immediately
               unmaps that window, but this results in a flicker.
               I haven't figured a way  to get  around  this;  it
               seems  to  be a fundamental property of the (mis-)
               design of this server extension.

               It sure would be nice if someone  would  implement
               the  SSGGII  SSCCRREEEENN__SSAAVVEERR  extension in XFree86; it's
               dead  simple,  and  works  far  better  than   the
               overengineered  and broken MMIITT--SSCCRREEEENN--SSAAVVEERR exten-
               sion.

       SSGGII PPoowweerr SSaavveerr
               If you're running Irix 6.3, you  might  find  that
               your monitor is powering down after an hour or two
               even if you've told it not to.  This is  fixed  by
               SGI patches 2447 and 2537.

               If  you're  running Irix 6.5, this bug is back.  I
               don't know a fix.

       MMeessaaGGLL aanndd VVooooddoooo CCaarrddss
               If you have a 3Dfx/Voodoo card, the  default  set-
               tings  for  xscreensaver  will  run  the  GL-based
               graphics demos in such a way that  they  will  not
               take  advantage  of  the 3D acceleration hardware.
               The solution is to change the pprrooggrraammss entries for






X Version 11             20-Jun-99 (3.15)                      23





XScreenSaver(1)                                   XScreenSaver(1)


               the GL hacks from this:

                           gears -root                        \n\

               to this:

                           MESA_GLX_FX=fullscreen  gears      \n\

               That  is,  make  sure  that $$MMEESSAA__GGLLXX__FFXX is set to
               _f_u_l_l_s_c_r_e_e_n, and don't tell the program to draw  on
               the  root  window.  This may seem strange, but the
               setup used by Mesa and these  kinds  of  cards  _i_s
               strange!

               For those who don't know, these cards work by sit-
               ting between your normal video card and the  moni-
               tor,  and seizing control of the monitor when it's
               time to do 3D.  But this means that accelerated 3D
               only  happens in full-screen mode (you can't do it
               in a window, and you can't see the  output  of  3D
               and  2D programs simultaniously), and that 3D will
               probably drive your monitor at a lower resolution,
               as well.  It's bizarre.

               If  you  find  that GL programs only work properly
               when run as root, and not as  normal  users,  then
               the  problem  is  that  your _/_d_e_v_/_3_d_f_x file is not
               configured properly.  Check the Linux 3Dfx FAQ.

       KKeeyybbooaarrdd LLEEDDss
               If _p_r_o_c_I_n_t_e_r_r_u_p_t_s is on (which is the  default  on
               Linux  systems) and you're using some program that
               toggles the state of your keyboard LEDs,  xscreen-
               saver  won't  work right: turning those LEDs on or
               off causes a keyboard  interrupt,  which  xscreen-
               saver  will  interpret  as  user  activity.  So if
               you're using such a program,  set  the  _p_r_o_c_I_n_t_e_r_-
               _r_u_p_t_s resource to False.

       EExxtteennssiioonnss
               If  you  are  not  making use of one of the server
               extensions  (XXIIDDLLEE,  SSGGII  SSCCRREEEENN__SSAAVVEERR,  or   MMIITT--
               SSCCRREEEENN--SSAAVVEERR), then it is possible, in rare situa-
               tions, for _x_s_c_r_e_e_n_s_a_v_e_r to  interfere  with  event
               propagation  and  make  another X program malfunc-
               tion.  For this to occur, that  other  application
               would  need  to  _n_o_t select KKeeyyPPrreessss events on its
               non-leaf windows within the first  30  seconds  of
               their  existence,  but then select for them later.
               In this case, that client _m_i_g_h_t  fail  to  receive
               those  events.  This isn't very likely, since pro-
               grams generally select a constant  set  of  events
               immediately  after creating their windows and then
               don't change them, but this  is  the  reason  that



X Version 11             20-Jun-99 (3.15)                      24





XScreenSaver(1)                                   XScreenSaver(1)


               it's  a  good  idea  to install and use one of the
               server extensions instead,  to  work  around  this
               shortcoming in the X protocol.

               In  all these years, I've not heard of even a sin-
               gle case of this happening, but  it  is  theoreti-
               cally possible, so I'm mentioning it for complete-
               ness...

       RReedd HHoott LLaavvaa
               There need to be a lot more  graphics  hacks.   In
               particular,  there  should  be  a  simulation of a
               Lavalite (tm).

EENNVVIIRROONNMMEENNTT
       DDIISSPPLLAAYY to get the default host and display number, and to
               inform  the sub-programs of the screen on which to
               draw.

       PPAATTHH    to find the sub-programs to run.

       HHOOMMEE    for the directory in which to read and  write  the
               _._x_s_c_r_e_e_n_s_a_v_e_r file.

       XXEENNVVIIRROONNMMEENNTT
               to  get the name of a resource file that overrides
               the global resources stored in  the  RESOURCE_MAN-
               AGER property.

UUPPGGRRAADDEESS
       The    latest    version    can   always   be   found   at
       http://www.jwz.org/xscreensaver/

SSEEEE AALLSSOO
       XX(1),    xxssccrreeeennssaavveerr--ddeemmoo(1),    xxssccrreeeennssaavveerr--ccoommmmaanndd(1),
       xxddmm(1),   xxsseett(1),   XXsseeccuurriittyy(1),   xxaauutthh(1),   xxhhoosstt(1).
       aanntt(1),    aattllaannttiiss(1),    aattttrraaccttiioonn(1),     bblliittssppiinn(1),
       bboouubboouullee(1),  bbrraaiidd(1),  bbssoodd(1), bbuubbbbllee33dd(1), bbuubbbblleess(1),
       ccaaggee(1), ccoommppaassss(1),  ccoorraall(1),  ccrriittiiccaall(1),  ccrryyssttaall(1),
       ccyynnoossuurree(1), ddeeccaayyssccrreeeenn(1), ddeeccoo(1), ddeelluuxxee(1), ddeemmoonn(1),
       ddiissccrreettee(1),  ddiissttoorrtt(1),  ddrriifftt(1),  eeppiiccyyccllee(1),   ffaaddee--
       pplloott(1), ffllaagg(1), ffllaammee(1), ffllooww(1), ffoorreesstt(1), ggaallaaxxyy(1),
       ggeeaarrss(1),  ggllppllaanneett(1),  ggoooopp(1),  ggrraavv(1),  ggrreeyynneettiicc(1),
       hhaalloo(1),   hheelliixx(1),  hhooppaalloonngg(1),  hhyyppeerrccuubbee(1),  iiffss(1),
       iimmssmmaapp(1), iinntteerrffeerreennccee(1),  jjiiggssaaww(1),  jjuulliiaa(1),  kkaalleeii--
       ddeessccooppee(1),  kkuummppppaa(1), llaammeenntt(1), llaasseerr(1), lliigghhttnniinngg(1),
       lliissaa(1),  lliissssiiee(1),  llmmoorrpphh(1),  lloooopp(1),  mmaazzee(1),  mmooee--
       bbiiuuss(1),  mmooiirree(1),  mmooiirree22(1),  mmoorrpphh33dd(1),  mmoouunnttaaiinn(1),
       mmuunncchh(1), nnoosseegguuyy(1), ppeeddaall(1), ppeenneettrraattee(1),  ppeennrroossee(1),
       ppeettrrii(1),   pphhoosspphhoorr(1),   ppiippeess(1),  ppuullssaarr(1),  ppyyrroo(1),
       qqiixx(1),  rrdd--bboommbb(1),  rroocckkss(1),  rroorrsscchhaacchh(1),   rroottoorr(1),
       rruubbiikk(1),    ssiieerrppiinnsskkii(1),    sslliiddeessccrreeeenn(1),    sslliipp(1),
       ssoonnaarr(1),  sspphheerree(1),  ssppiirraall(1),  ssppoottlliigghhtt(1),   sspprrooiinn--
       ggiieess(1),  ssqquuiirraall(1),  ssttaaiirrss(1), ssttaarrffiisshh(1), ssttrraannggee(1),



X Version 11             20-Jun-99 (3.15)                      25





XScreenSaver(1)                                   XScreenSaver(1)


       ssuuppeerrqquuaaddrriiccss(1),    sswwiirrll(1),    tt33dd(1),     ttrriiaannggllee(1),
       ttrruucchheett(1),   vviinneess(1),   wwaannddeerr(1),  wwoorrmm(1),  xxffllaammee(1),
       xxjjaacckk(1),  xxllyyaapp(1),  xxmmaattrriixx(1),   xxrrooggeerr(1),   bboonnggoo(1),
       iiccoo(1),   xxaaooss(1),   xxbboouunncceebbiittss(1),  xxcctthhuugghhaa(1),  xxddaallii--
       cclloocckk(1),  xxffiisshhttaannkk(1),   xxmmoouunnttaaiinnss(1),   xxsspplliinneeffuunn(1),
       xxsswwaarrmm(1), xxttaaccyy(1), xxvv(1), xxwwaavvee(1).

CCOOPPYYRRIIGGHHTT
       Copyright  (C)  1991,  1992, 1993, 1994, 1995, 1996, 1997,
       1998, 1999 by Jamie Zawinski.  Permission  to  use,  copy,
       modify,  distribute,  and sell this software and its docu-
       mentation for any purpose is hereby granted  without  fee,
       provided  that  the  above  copyright notice appear in all
       copies and that both that copyright notice and  this  per-
       mission  notice  appear  in  supporting documentation.  No
       representations are made about  the  suitability  of  this
       software  for any purpose.  It is provided "as is" without
       express or implied warranty.

AAUUTTHHOORR
       Jamie Zawinski <jwz@jwz.org>.  Written in late 1991; first
       posted to comp.sources.x on 13-Aug-1992.

       Please  let  me  know  if  you  find  any bugs or make any
       improvements.

AACCKKNNOOWWLLEEDDGGEEMMEENNTTSS
       Thanks to the many people who  have  contributed  graphics
       demos to the package.

       Thanks to David Wojtowicz for implementing _l_o_c_k_T_i_m_e_o_u_t.

       Thanks  to  Martin  Kraemer  for adding support for shadow
       passwords and locking-disabled diagnostics.

       Thanks to Patrick Moreau for the VMS port.

       Thanks to Mark Bowyer for figuring out how to hook  it  up
       to CDE.

       Thanks to Nat Lanza for the Kerberos support.

       Thanks to Bill Nottingham for the initial PAM support.

       And  thanks  to  Jon  A.  Christopher for implementing the
       Athena dialog support, back in the days before Lesstif  or
       Gtk were viable alternatives to Motif.










X Version 11             20-Jun-99 (3.15)                      26


